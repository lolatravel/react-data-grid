.lightTheme() {
    @bg: #fff;
    @selectedRow: #dbecfa;
    --color: #48494a;
    --border-color: #edeef0;
    --summary-border-color: #aaa;
    --background-color: @bg;
    --header-background-color: #ffffff;
    --row-hover-background-color: darken(@bg, 4%);
    --row-selected-background-color: @selectedRow;
    --row-selected-hover-background-color: darken(@selectedRow, 4%);

    --checkbox-color: #005295;
    --checkbox-focus-color: lighten(#005295, 40%);
    --checkbox-disabled-border-color: #ccc;
    --checkbox-disabled-background-color: #ddd;
}

.darkTheme() {
    @bg: #222;
    @selectedRow: darken(#dbecfa, 50%);
    --color: #ddd;
    --border-color: #444;
    --summary-border-color: #555;
    --background-color: @bg;
    --header-background-color: darken(@bg, 2.5%);
    --row-hover-background-color: darken(@bg, 4%);
    --row-selected-background-color: @selectedRow;
    --row-selected-hover-background-color: darken(@selectedRow, 4%);

    --checkbox-color: lighten(#005295, 50%);
    --checkbox-focus-color: lighten(#005295, 60%);
    --checkbox-disabled-border-color: #000;
    --checkbox-disabled-background-color: #333;
}

.rdg {
    .lightTheme();
    --selection-color: #48494a;
    --font-size: 14px;

    // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context
    // We set a stacking context so internal elements don't render on top of external components.
    contain: strict;
    contain: size layout style paint;
    content-visibility: auto;
    height: 350px;
    // border: 1px solid var(--border-color);
    box-sizing: border-box;
    overflow: auto;
    -webkit-user-select: none;
    user-select: none;
    background-color: var(--background-color);
    color: var(--color);
    font-size: var(--font-size);
    flex: 1;
    overflow-y: scroll;

    &::-webkit-scrollbar {
        -webkit-appearance: none;
        height: 8px;
        width: 8px;
        background-color: #f7f7f8;
    }
    &::-webkit-scrollbar-thumb {
        border-radius: 13px;
        background-color: #dcdddf;
    }
    &::-webkit-scrollbar-corner {
        background-color: #f7f7f8;
    }

    *,
    *::before,
    *::after {
        box-sizing: inherit;
    }
}

// set stacking context in safari
@supports not (contain: strict) {
    .rdg {
        position: relative;
        z-index: 0;
    }
}

.rdg-focus-sink {
    position: sticky;
    top: 0;
    left: 0;
    height: 0;
    width: 0;
    outline: 0;
}

.rdg-mock-options {
    width: 54px;
    box-shadow: -1px 0px 6px 2px rgba(0, 0, 0, 0.12);
    z-index: -1;
    background-color: #f7f7f8;
    position: sticky;
    height: 100%;
    top: 0;
    left: 100%;
    display: flex;
    border-left: 1px solid var(--border-color);
}

.rdg-viewport-dragging .rdg-row {
    cursor: move;
}
